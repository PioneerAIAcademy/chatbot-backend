[project]
name = "chatbot-backend"
version = "0.1.0"
description = "Example AI chatbot"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Dallan Quass"}
]
license = {file = "LICENSE"}
keywords = ["ai", "chatbot"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
    "License :: OSI Approved :: Apache Software License",
    "Private :: Do Not Upload"
]
dependencies = [
    "bcrypt>=4.3.0",
    "boto3>=1.38.21",
    "botocore>=1.38.21",
    "fastapi>=0.115.12",
    "mangum>=0.19.0",
    "openai>=1.78.1",
    "pydantic>=2.11.4",
    "python-dotenv>=1.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/chatbot_backend"]
include = ["src/chatbot_backend/py.typed"]  # Include py.typed marker

[dependency-groups]
dev = [
    "deptry>=0.23.0",
    "httpx>=0.28.1", # for FastAPI test client
    "ipykernel>=6.29.5",
    "mypy>=1.15.0",
    "pip>=25.1.1",
    "pre-commit>=4.2.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pyupgrade>=3.19.1",
    "requests>=2.32.3", # for scripts
    "ruff>=0.11.9",
    "types-requests>=2.32.0.20250328",
    "uvicorn>=0.34.2", # for local development only
]

[tool.ruff]
line-length = 120
fix = true
target-version = "py312"  # Match your Python version requirement
exclude = [".aws-sam"]

[tool.ruff.format]
preview = true
quote-style = "double"  # Standardize on double quotes

[tool.ruff.lint]
extend-select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "ANN", # flake8-annotations
    "PT",  # flake8-pytest-style
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "ARG", # flake8-unused-arguments
    "ERA", # eradicate (commented out code)
]
ignore = [
    "S101",  # assert statements
    "ANN401",  # annotation rules
    "ERA001",  # commented out code
    "N806",  # variable name should be lowercase (ignore for matrix variables like X, X_train, etc.)
 ]

[tool.ruff.lint.isort]
known-first-party = ["chatbot_backend"]
force-single-line = false  # Prevent splitting into single lines
combine-as-imports = true  # combine aliased members into one import statement

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"]  # Ignore all annotation rules in test files

[tool.mypy]
files = ["src", "scripts"]
namespace_packages = true
explicit_package_bases = true
mypy_path = ["src"]
exclude = [".aws-sam"]
disallow_untyped_defs = true          # Keep this for good practice
disallow_any_unimported = false       # Allow Any in imports for simplicity
no_implicit_optional = true           # Keep this for clarity
check_untyped_defs = true             # Keep this for consistency
warn_return_any = false               # Changed to false - allow returning Any for simplicity
warn_unused_ignores = false           # Allow unused type ignores
show_error_codes = true               # Keep this for better error messages
python_version = "3.12"               # Match your Python version requirement
warn_redundant_casts = true           # Keep this for cleaner code
disallow_incomplete_defs = false      # Changed to false - allow partial typing
disallow_untyped_decorators = false   # Keep this setting
disable_error_code = [
    "valid-type",                     # ignore PEP 695 type alias errors
    "unused-ignore",                  # ignore unused ignores
    "no-any-unimported",              # ignore unimported any errors
    "import-untyped",                 # ignore untyped import errors
    "import-not-found",               # ignore import not found errors
    "union-attr",                     # ignore attribute errors on union types
    "attr-defined"                    # ignore attribute defined errors
]

[[tool.mypy.overrides]]
module = [
    "pydantic.*",
    "fastapi.*",
    "mangum.*",
    "uvicorn.*",
    "requests.*",
    "openai.*",
    "dotenv",
    "bcrypt"
]
ignore_missing_imports = true

[tool.deptry]
exclude = [".venv", ".aws-sam"]
known_first_party = ["chatbot_backend"]  # Treats chatbot_backend as part of your project

[tool.deptry.per_rule_ignores]
DEP004 = [
    "pytest",
    "requests",  # for scripts
    "uvicorn",  # for local development only
]

[tool.pyright]
exclude = ["tests"]
reportMissingTypeStubs = false

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
